name: Integration Tests

on:
  push:
    branches:
      - main
      - scroll-stable
      - scroll-dev

env:
  SCCACHE_REGION: ap-northeast-1
  SCCACHE_BUCKET: ff-building
  SCCACHE_S3_USE_SSL: true
  SCCACHE_S3_KEY_PREFIX: sccache-gh-action
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CARGO_INCREMENTAL: false

jobs:
  integration-tests:
    if: github.event.pull_request.draft == false

    name: Integration Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./integration-tests
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: false
      - name: Set PATH
        run: echo "${HOME}/bin" >> $GITHUB_PATH
      - name: Install Solc
        run: |
          mkdir -p "$HOME/bin"
          wget -q https://github.com/ethereum/solidity/releases/download/v0.8.10/solc-static-linux -O $HOME/bin/solc
          chmod u+x "$HOME/bin/solc"
          solc --version
      # Go cache for building geth-utils
      - name: Go cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup sccache
        run: |
          cd $RUNNER_TEMP
          export NAME="sccache-v0.2.15-x86_64-unknown-linux-musl"
          curl -fsSOL https://github.com/mozilla/sccache/releases/download/v0.2.15/$NAME.tar.gz
          tar xzf $NAME.tar.gz
          mkdir -p ~/.cargo/bin
          mv ./$NAME/sccache ~/.cargo/bin
          chmod +x ~/.cargo/bin/sccache
          printf "[build]\nrustc-wrapper = \"/home/runner/.cargo/bin/sccache\"" >> ~/.cargo/config
          ~/.cargo/bin/sccache -s
      # Run an initial build in a separate step to split the build time from execution time
      - name: Build bins
        run: cargo build --bin gen_blockchain_data
      - name: Build tests
        run: for testname in rpc circuit_input_builder circuits; do cargo test --profile release --test $testname --features $testname --no-run; done
      - run: ./run.sh --steps "setup"
      - run: ./run.sh --steps "gendata"
      - run: ./run.sh --steps "tests" --tests "rpc"
      - run: ./run.sh --steps "tests" --tests "circuit_input_builder"
      # Uncomment once the evm and state circuits tests pass for the block
      # where Greeter.sol is deployed.
      # - run: ./run.sh --steps "tests" --tests "circuits"
      - run: ./run.sh --steps "cleanup"
      - name: Show sccache stats
        run: ~/.cargo/bin/sccache -s
