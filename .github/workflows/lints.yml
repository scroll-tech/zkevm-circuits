name: Lints

# We only run these lints on trial-merges of PRs to reduce noise.
on:
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]
    # Ignore when target branch is `main` and source branch is develop.
    # It could avoid running twice. Since develop is set as `push` below.
    branches-ignore:
      - main
  push:
    branches:
      - develop

env:
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: git

jobs:
  skip_check:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          cancel_others: 'true'
          concurrent_skipping: 'same_content_newer'
          paths_ignore: '["**/README.md"]'

  clippy:
    needs: [skip_check]
    if: |
      github.event.pull_request.draft == false &&
      (github.event.action == 'ready_for_review' || needs.skip_check.outputs.should_skip != 'true')

    name: Clippy
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2023-12-03
          components: clippy
      # Go cache for building geth-utils
      - name: Go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
        # https://github.com/actions/cache/issues/810
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 5
      - name: Cargo cache
        uses: Swatinem/rust-cache@v2
      - name: Run clippy
        run: cargo clippy --all-features --all-targets -- -D warnings
